/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Task Tracker API
 * Task Tracker API
 * OpenAPI spec version: 1.0.0
 */
import { createInstance } from "./api-instance";
import type { BodyType } from "./api-instance";
export interface RegisterByLoginRequest {
  login: string;
  password: string;
}

export interface LoginRequest {
  login: string;
  password: string;
}

export interface UserResponse {
  id?: string;
  login?: string;
  registeredAt?: string;
}

export type RegisterByLogin200 = {
  success?: boolean;
  message?: string;
};

export type Login200 = {
  success?: boolean;
  message?: string;
};

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * @summary Register by login
 */
export const registerByLogin = (
  registerByLoginRequest: BodyType<RegisterByLoginRequest>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<RegisterByLogin200>(
    {
      url: `/auth/register-by-login`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: registerByLoginRequest,
    },
    options,
  );
};

/**
 * @summary Login
 */
export const login = (
  loginRequest: BodyType<LoginRequest>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<Login200>(
    {
      url: `/auth/login`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: loginRequest,
    },
    options,
  );
};

/**
 * @summary Me
 */
export const me = (options?: SecondParameter<typeof createInstance>) => {
  return createInstance<UserResponse>(
    { url: `/auth/me`, method: "GET" },
    options,
  );
};

export type RegisterByLoginResult = NonNullable<
  Awaited<ReturnType<typeof registerByLogin>>
>;
export type LoginResult = NonNullable<Awaited<ReturnType<typeof login>>>;
export type MeResult = NonNullable<Awaited<ReturnType<typeof me>>>;
